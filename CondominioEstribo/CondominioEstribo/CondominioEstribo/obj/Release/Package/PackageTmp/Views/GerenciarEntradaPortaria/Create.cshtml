@model CondominioEstribo.Models.GerenciarEntradaPortaria

@{
    ViewBag.Title = "Registrar a Entrada De Pessoas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">

    <div class="row">

        <h2>Registrar Entrada De Pessoas</h2>

        <br />


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            <div class="col-md-4">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", placeholder = "Informe o Nome", required = "true" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataHoraEntrada, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.DataHoraEntrada, new { htmlAttributes = new { @class = "form-control", placeholder = "Data e Hora da Entrada" } })
                            @Html.ValidationMessageFor(model => model.DataHoraEntrada, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("LblStatus", "Status*", new { @class = "control-label " })
                        <div class="col-md-12">
                            @Html.DropDownList("DropStatus", new List<SelectListItem>{
                            new SelectListItem{ Text = "Entrada", Value = "1", Selected = true},
                            new SelectListItem{ Text = "Saída", Value = "2"},
                                }, "--Selecione--", new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                </div>

                <br />
                <br />

                <div class="form-group">
                    <div class="col-md-1">
                        <input type="submit" value="Gravar" class="btn btn-success"  />
                    </div>
                    <div class="col-md-offset-4">
                        @Html.ActionLink("Cancelar", "Index", new { area = "Index", controller = "Home" }, new { @class = "btn btn-default" })
                    </div>
                </div>

                <br />
            </div>



            <div class="col-md-4">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataRG(this,event)", placeholder = "Informe o RG", required = "true" } })
                            @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataHoraSaida, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.DataHoraSaida, new { htmlAttributes = new { @class = "form-control", placeholder = "Data e Hora da Saída", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.DataHoraSaida, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                            @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-4">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PlacaDoVeiculo, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PlacaDoVeiculo, new { htmlAttributes = new { @class = "form-control", placeholder = "Informe a Placa do Veículo", maxlength = "8" } })
                            @Html.ValidationMessageFor(model => model.PlacaDoVeiculo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TelefoneContato, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.TelefoneContato, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTelefone(this,event)", placeholder = "Informe o Telefone Celular", required = "true", maxlength = "14" } })
                            @Html.ValidationMessageFor(model => model.TelefoneContato, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>          

                               
            
        }


    </div>
</div>

<script src="~/JS/Mascara.js" type="text/javascript"></script>